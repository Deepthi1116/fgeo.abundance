% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_woods.R
\name{count_woods}
\alias{count_woods}
\alias{count_trees}
\alias{count_saplings}
\title{Count unique trees based on the dbh of their largest stem.}
\usage{
count_woods(.data, ..., .collapse = fgeo.tool::by_treeid_pick_dbh_max)

count_trees(.data, .collapse = fgeo.tool::by_treeid_pick_dbh_max)

count_saplings(.data, .collapse = fgeo.tool::by_treeid_pick_dbh_max)
}
\arguments{
\item{.data}{A dataframe; particularly a ForestGEO census or ViewFullTable.}

\item{...}{Expressions to pick stems of specific \code{dbh} -- where \emph{stems}
refers to the largest stem of each tree.}

\item{.collapse}{\code{fgeo.tool::by_treeid_pick_dbh_max} and
\code{fgeo.tool::by_treeid_pick_dbh_min}(bare name of the corresponding functions)
collapse the data picking the stem (of each treeid) with the maximum and
minimum dbh, respectively.}
}
\value{
A dataframe with preserved groups (if any).
}
\description{
This functions count unique treeid by censusid (automatically) and any number
of additional grouping variables (via \code{dplyr::group_by()}. Data with
multi-stem trees is first collapsed. The collapse defaults to picking the
stem (of each treeid) with maximum dbh (pick minimum dbh with the argument
\code{.collapse}).
\itemize{
\item \code{count_woods()} is general and allows filtering data using any number of
expressions passed via the argument \code{...} to \code{dplyr::filter()}.
\item \code{count_trees()} is an opinionated shortcut that defines tress as stems of
dbh of 100 mm and above.
\item \code{count_samplings()} is an opinionated shortcut that defines saplings as
stems of dbh of between 10 mm inclusive and 100 mm exclusive.
}
}
\examples{
library(dplyr)

census <- tibble::tribble(
  ~dbh,   ~sp, ~treeID, ~stemID,
    10, "sp1",     "1",   "1.1",
   100, "sp1",     "1",   "1.2",
    22, "sp2",     "2",   "2.1",
    99, "sp2",     "2",   "2.2",
    NA, "sp2",     "2",   "2.3"
)

# Count all woods
count_woods(census)

by_sp_treeid <- group_by(census, sp, treeID)
count_trees(by_sp_treeid)

by_sp <- group_by(census, sp)
count_woods(by_sp)

count_woods(by_sp, dbh >= 100)
# Same
count_trees(by_sp)

count_woods(by_sp, dbh > 10, dbh < 100)
# Same
count_saplings(by_sp)
}
\seealso{
Other functions for fgeo census and vft.: \code{\link{count_distinct_treeid}}
}
\concept{functions for fgeo census and vft.}
