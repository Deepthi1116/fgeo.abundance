% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/abundance.R
\name{abundance}
\alias{abundance}
\alias{basal_area}
\title{Abundance and basal area.}
\usage{
abundance(x)

basal_area(x)
}
\arguments{
\item{x}{A dataframe. \code{basal_area()} requires a column named \code{dbh} (case
insensitive).}
}
\description{
\itemize{
\item \code{abundance()} and \code{basal_area()}:
\itemize{
\item Warn if they detect multiple censusid and multiple plots.
\item Can compute by groups of data created with \code{\link[=group_by]{group_by()}}.
}
\item \code{abundance()}:
\itemize{
\item Is similar to \code{\link[dplyr:n]{dplyr::n()}}.
\item Warns if it detects duplicated values of treeid.
}
\item \code{basal_area()}:
\itemize{
\item Warns if it detects duplicated values of stemid.
\item Does not convert units. For that see \code{\link[=convert_unit]{convert_unit()}}.
}
}
}
\section{Warning}{

To pick specific rows (e.g. to pick "alive" stems or \code{dbh} within some range)
you should use functions such as \code{[}, \code{\link[=subset]{subset()}}, or \code{\link[dplyr:filter]{dplyr::filter()}}
\emph{before} using \code{abundance()}. (Notice the difference with \code{ctfs::abundance},
which includes arguments to deal with \code{dbh} and \code{status}).
}

\examples{
# abundance() -------------------------------------------------------------

# Similar to dplyr::n()
abundance(data.frame(1))

vft <- tibble::tribble(
  ~PlotName, ~CensusID, ~TreeID, ~StemID, ~DBH,
  "p",         1,     "1",   "1.1",   10,
  "q",         2,     "1",   "1.1",   10
)

# * Warns if it detects multiple values of censusid or plotname
# * Also warns if it detects duplicated values of treeid
abundance(vft)

# You should probably work with a single plotname. 
# Yet your data may have multiple stems per treeid and even multiple measures
# per stemid (when trees have buttressess).
vft2 <- tibble::tribble(
  ~CensusID, ~TreeID, ~StemID, ~DBH, ~HOM,
  1,     "1",   "1.1",   88,  130,
  1,     "1",   "1.1",   10,  160,
  1,     "2",   "2.1",   20,  130,
  1,     "2",   "2.2",   30,  130,
)

# You should count only the main stem of each tree
(main_stem <- pick_main_stem(vft2))
abundance(main_stem)

vft3 <- tibble::tribble(
  ~CensusID, ~TreeID, ~StemID, ~DBH, ~HOM,
  1,     "1",   "1.1",   20,  130,
  1,     "1",   "1.2",   10,  160,  # Main stem
  2,     "1",   "1.1",   12,  130,
  2,     "1",   "1.2",   22,  130   # Main stem
)

# You can compute by groups
(main_stems_by_census <- pick_main_stem(by_census))
abundance(main_stems_by_census)

# basal_area() ------------------------------------------------------------

# Data must have a column named dbh (case insensitive)
basal_area(data.frame(dbh = 1))

# * Warns if it detects multiple values of censusid or plotname
# * Also warns if it detects duplicated values of stemid
basal_area(vft)

# First you may pick the main stemid of each stem
(main_stemids <- pick_main_stemid(vft2))
basal_area(main_stemids)

# You can compute by groups
by_census <- group_by(vft3, CensusID)
basal_area(by_census)

# To convert units see ?convert_unit()
ba <- basal_area(by_census)
convert_unit_at(ba, .at = "basal_area", from = "mm2", to = "hectare")
}
\seealso{
\code{\link[dplyr:n]{dplyr::n()}}, \code{\link[=group_by]{group_by()}}, \code{\link[=convert_unit]{convert_unit()}}.
}
