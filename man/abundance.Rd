% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/abundance_.R
\name{abundance}
\alias{abundance}
\alias{abundance_tally}
\title{Count number of individuals in total or by groups.}
\usage{
abundance(x, group_by = c("quadrat", "sp"), only_alive = TRUE)

abundance_tally(x, only_alive = TRUE)
}
\arguments{
\item{x}{Census.}

\item{group_by}{Character string giving the names of variables to group by.}

\item{only_alive}{If TRUE, counts only alive individuals (\code{status == "A"}).
If FALSE counts individuals of all available statuses.}
}
\value{
\itemize{
\item \code{abundance_tally()}: An integer giving the number of rows in \code{x}, which
for census data equals the number of unique individuals.
\item \code{abundance()}: a data frame giving the number of individuals in each
group defined by \code{group_by}.
}
}
\description{
Count number of individuals in total (\code{abundance_tally()}) or by groups
(\code{abundance()}).
}
\examples{
stem <- bci12s7mini

# Returns a data frame by groups
n <- abundance(stem)
head(n)

# Safest functions always return the same type of output. This errs:
\dontrun{
abundance(stem, group_by = NULL)
}

# Returns not a data frame but an integer representing a tally
n <- abundance_tally(stem)
head(n)

# Count not only alive
n <- abundance(stem, group_by = c("status", "sp"), only_alive = FALSE)
head(n)



# Same, using dplyr directly

library(dplyr)

alive <- filter(stem, status == "A")

grouped <- group_by(alive, quadrat, sp)
summarise(grouped, n = n())

# Or
count(alive, quadrat, sp)
}
\seealso{
\code{\link[dplyr:tally]{dplyr::tally()}}, \link[dplyr:count]{dplyr::count}.
}
\author{
Gabriel Arellano, Sean McMahon & Mauro Lepore.
}
