% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_alive.R
\name{count_status}
\alias{count_status}
\alias{count_alive}
\title{Count the total number of individuals in a dataset or within groups.}
\usage{
count_status(x, .status, ...)

count_alive(x, ...)
}
\arguments{
\item{x}{Census.}

\item{.status}{A character vector giving the statuses to keep.}

\item{...}{Optional. Bare name of variables to group by (passed to
\code{\link[dplyr:count]{dplyr::count()}}.}
}
\value{
If you provide grouping variables, these functions output a grouped
summary. Else, they output a tally.
}
\description{
In an ecological context, these functions calculate abundance. To choose the
status of the individuals you want to count, use \code{\link[=count_status]{count_status()}}. If you
only want to count alive individuals, you may use the shortcut
\code{\link[=count_alive]{count_alive()}}.
}
\examples{
library(bciex)
stems <- bci12s5mini
trees <- bci12t5mini

# By default, tally of alive individuals
count_alive(stems)
# Dead
count_status(trees, .status = "D")

# Give one or multiple grouping variables to get a grouped summary
count_alive(stems, sp)
# Dead by species
count_status(stems, .status = "D", sp)

# Multiple groups
# Alive
stems2 <- rbind(bci12s5mini, bci12s6mini)
count_alive(stems2, sp, CensusID)
# Dead
stems2 <- rbind(bci12s5mini, bci12s6mini)
count_status(stems2, .status = "D", sp, CensusID)
}
\seealso{
\code{\link[dplyr:count]{dplyr::count()}}.
}
