% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_distinct.R
\name{count_distinct}
\alias{count_distinct}
\alias{count_distinct_stemid}
\alias{count_distinct_treeid}
\title{Abundance of trees, stems, and count distinct values of a variable by groups.}
\usage{
count_distinct(.data, .var)

count_distinct_stemid(.data)

count_distinct_treeid(.data)
}
\arguments{
\item{.data}{A dataframe, commonly grouped with \code{group_by()}.}

\item{.var}{A variable to count distinct occurrences.}
}
\value{
An object of the same class as .data. One grouping level will be
dropped.
}
\description{
These functions count rows by groups (if you need to exclude some
observations, to it first -- see warning). These functions are usually used
on grouped data created by \code{dplyr::group_by()} (reexported by \strong{fgeo}). The
output will have one row for each group:
\itemize{
\item \code{count_distinct()} counts distinct occurrences of any variable of any
dataset (not specifically a ForestGEO dataset).
\item \code{count_distinct_stemid()} and \code{count_distinct_treeid()} are simpler and
specialized versions \code{count_distinct()}, for specifically counting distinct
occurrences of the variables \code{TreeID} and \code{StemID}, or \code{stemID} and \code{treeID},
which uniquely identify each stem and tree in \code{ViewFullTable}s and census
datasets of ForestGEO.
}
}
\section{Warning}{

These functions do not remove dead stems or trees. If you don't want dead
trees to be included, remove them first (see \code{\link[=drop_dead_tree]{drop_dead_tree()}},
\code{\link[=drop_dead_stem]{drop_dead_stem()}}.
}

\examples{
library(dplyr)

count_distinct(mtcars)
count_distinct(mtcars, cyl)
dplyr::n_distinct(mtcars)

\dontrun{
# Fails because `...` to `n_distinct()` are vectors, not dataframe-variables
dplyr::n_distinct(mtcars, cyl)
}


length(unique(mtcars$mpg))



count_distinct(group_by(mtcars, cyl), mpg)

# Example data
census <- tibble::tibble(
  treeID = c(1, 1, 2, 3, 3, 3),
  stemID = c(1, 2, 3, 4, 5, 6),
  quadrat = paste0("000", rep(1:2, each = 3)),
  sp = c(paste0("sp", c(1, 1, 2)), paste0("sp", c(3, 3, 3))),
  dbh = abs(sample(rnorm(100), 6) * 10)
)
census

count_distinct(census, stemID)

by_quad <- group_by(census, quadrat)
count_distinct(by_quad, stemID)
count_distinct(by_quad, treeID)

count_distinct_stemid(by_quad)

count_distinct_treeid(by_quad)

by_sp <- group_by(census, sp)
count_distinct_stemid(by_sp)
count_distinct_treeid(by_sp)

by_quad_sp <- group_by(census, quadrat, sp)
count_distinct_stemid(by_quad_sp)
count_distinct_treeid(by_quad_sp)
}
\seealso{
\code{\link[dplyr:group_by]{dplyr::group_by()}}, \code{\link[dplyr:summarise]{dplyr::summarise()}}, \code{\link[=drop_dead_tree]{drop_dead_tree()}},
\code{\link[=drop_dead_stem]{drop_dead_stem()}}.
}
