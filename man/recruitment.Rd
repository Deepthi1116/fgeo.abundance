% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mortality.R, R/recruitment.R
\name{mortality}
\alias{mortality}
\alias{mortality_df}
\alias{recruitment}
\alias{recruitment_df}
\title{Recruitment and mortality}
\usage{
mortality(census1, census2, alivecode = c("A", "AB", "AS"), split1 = NULL,
  split2 = NULL)

mortality_df(census1, census2, alivecode = c("A", "AB", "AS"),
  split1 = NULL)

recruitment(census1, census2, mindbh = 10, alivecode = c("A", "AB", "AS"),
  split1 = NULL, split2 = NULL)

recruitment_df(census1, census2, mindbh = 10, alivecode = c("A", "AB",
  "AS"), split1 = NULL)
}
\arguments{
\item{census1}{The R Analytical Table for a single census, either tree or
stem.}

\item{census2}{The matching R Analytical Table for a later census.}

\item{alivecode}{character, codes of the variable `status` that indicate the 
tree is alive. The default 'A' is the standard CTFS designation for living 
trees or stems}

\item{split1}{a vector of categories, one per individual}

\item{split2}{another vector of categories, one per individual}

\item{mindbh}{The minimum diameter above which the counts are done. Trees
smaller than `mindbh` are excluded. If `NULL`, all living trees are
included.}
}
\value{
(xxx ask documentation)
\code{recruitment()} returns a list with components:
\itemize{
\item \code{N2}:
\item \code{R}:
\item \code{rate}:
\item \code{lower}:
\item \code{upper}:
\item \code{time}:
\item \code{date1}:
\item \code{date2}:
}

\code{mortality()} returns a list with components:
\itemize{
\item \code{N}: the number of individuals alive in the census 1 per category selected
\item \code{D}: the number of individuals no longer alive in census 2
\item \code{rate}: the mean annualized mortality rate constant per category selected,
calculated as (log(N)-log(S))/time
\item \code{upper}: upper confidence limit of mean rate
\item \code{lower}: lower confidence limit of mean rate
\item \code{time}: mean time interval in years
\item \code{date1}: mean date included individuals were measured in census 1, as
julian object (R displays as date, but treats as integer)
\item \code{date2}: mean date in census 2
\item \code{dbhmean}: mean dbh in census 1 of individuals included
}
}
\description{
Caculate demography metrics accross the entire dataset or within one or two
groups (as in (http://ctfs.si.edu/Public/CTFSRPackage/). Each of these
demography functions has a \code{*_df()} version that accepts not more than one
split variable and, instead of a list, returns a dataframe.

For every individual of all species you must provide two complete datasets,
one per census, with variables \code{dbh}, \code{pom}, \code{status} and \code{date}. Any status
indicating a live tree can be submitted in the variable \code{alivecode}.
}
\details{
Survivors are all individuals alive in both censuses, with \code{status == A} in
the first census, and larger than the minimum dbh in the first census. The
total population in the second census includes all those alive, above the
minimum \code{dbh}, plus any other survivors. Individuals whose status is NA in
either census are deleted from all calculations.
}
\examples{
# Some data to play with
census1 <- forestr::bci12t6mini
census2 <- forestr::bci12t7mini

recruitment(census1, census2)

# Easier to view and filter when you split by some variable with many groups
# (note warning when some groups have dbh values full of NA)
recruitment_df(census1, census2, split1 = census1$sp)

# Same for `mortality()`; lets explore a few species
(all_sp <- mortality_df(census1, census2, split1 = census1$sp))
few_sp <- sample(unique(all_sp$split), 3)
long_format <- subset(all_sp, split \%in\% few_sp)
head(long_format, 10)

# From long to wide format
library(tidyr)
wide_format <- tidyr::spread(long_format, key = split, value = value)
wide_format
}
\seealso{
Other functions from http://ctfs.si.edu/Public/CTFSRPackage/: \code{\link{CI}},
  \code{\link{IfElse}}, \code{\link{addBinParam}},
  \code{\link{arrangeParam.Gibbs}},
  \code{\link{arrangeParam.llike}},
  \code{\link{bad.binparam}},
  \code{\link{binGraphManySpecies.Panel}},
  \code{\link{binGraphManySpecies}},
  \code{\link{binGraphSampleSpecies}},
  \code{\link{biomass.growth}},
  \code{\link{calcMortIndivTable}},
  \code{\link{calculateBinModel.AIC}},
  \code{\link{calculateBinModel.BIC}},
  \code{\link{colMedians}},
  \code{\link{compare.growthbinmodel}},
  \code{\link{defineBinBreaks}}, \code{\link{defineSDpar}},
  \code{\link{dgammadexp}}, \code{\link{drp}},
  \code{\link{enoughSamplePerBin}},
  \code{\link{extract.growthdata}},
  \code{\link{fill.dimension}}, \code{\link{find.climits}},
  \code{\link{graph.growthmodel.spp}},
  \code{\link{graph.growthmodel}},
  \code{\link{graph.outliers.spp}},
  \code{\link{graph.outliers}},
  \code{\link{growth.biomass.indiv}},
  \code{\link{growth.dbh}}, \code{\link{growth.eachspp}},
  \code{\link{growth.flexbin}}, \code{\link{growth.indiv}},
  \code{\link{growth}},
  \code{\link{individual_grow.table}},
  \code{\link{linear.model.ctr}},
  \code{\link{linear.model}},
  \code{\link{linearmodel.bin.set}},
  \code{\link{linearmodel.bin}},
  \code{\link{llike.GaussModelSD}},
  \code{\link{llike.GaussModel}},
  \code{\link{llike.linearbin.optim}}, \code{\link{logit}},
  \code{\link{metrop1step}}, \code{\link{model.xy}},
  \code{\link{mortality.calculation}},
  \code{\link{mortality.dbh}},
  \code{\link{mortality.eachspp}},
  \code{\link{overlay.growthbinmodel}}, \code{\link{pst}},
  \code{\link{pts.to.interceptslope}},
  \code{\link{rndown5}},
  \code{\link{run.growthbin.manyspp}},
  \code{\link{run.growthfit.bin}},
  \code{\link{trim.growth}}, \code{\link{wideEnoughBins}}

Other functions to compare two censuses: \code{\link{growth}}
}
