% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/neighbor.R
\name{neighbor}
\alias{neighbor}
\alias{abundance_neighbor}
\alias{count_neighbor}
\alias{basal_area_neighbor}
\title{Count and basal area of neighboring stems.}
\usage{
count_neighbor(.data, .subset = NULL, r, plotdim = NULL)

basal_area_neighbor(.data, .subset = NULL, r, plotdim = NULL)
}
\arguments{
\item{.data}{A Dataframe; particularly  a ForestGEO census table (tree or
stem).}

\item{.subset}{An optional dataframe giving the (\code{gx}, \code{gy}) coordinates of
specific individuals (\code{tag} and \code{sp}) for which to count neighbors. For
example, \code{.subset} may be a subset of only one species; or seedling that
are not part of census \code{.data}. \code{.subset} must have columns \code{gx}, \code{gy},
\code{sp}, and \code{tag}.}

\item{r}{Radius.}

\item{plotdim}{The x and y dimensions of the plot.}
}
\value{
A dataframe.

A dataframe with two columns \code{conspecific} and \code{heterospecific}, and
optionally one extra column for each variable used to group by. The number
of rows is as follows:
\itemize{
\item If \code{.subset} is \code{NULL}, the output and \code{.data} have equal number of rows,
both for grouped and ungrouped \code{.data}.
\item If \code{.subset} is not \code{NULL}, and \code{.data} is ungrouped, the output and
\code{.subset} have equal number of rows.
\item If \code{.subset} is not \code{NULL}, and \code{.data} is grouped, the output has a number
of rows that equals that of \code{.subset} multiplied by the number of groups.
}
}
\description{
Includes all values of \code{status} and \code{dbh}. You should pick the values you
want before using these functions (e.g. to drop dead stems).
}
\section{Warning}{

This function has a pending issue by which a dataset with a single row does
not result in zero conspecific neighbors
(\url{https://github.com/forestgeo/fgeo.abundance/issues/68}).
}

\examples{
tree <- fgeo.data::luquillo_tree5_random

# Guess `plotdim`
count_neighbor(tree, r = 20)

# Explicit `plotdim`
count_neighbor(tree, r = 20, plotdim = c(320, 500))

basal_area_neighbor(tree, r = 20, plotdim = c(320, 500))

# Notice how the number of rows of the output varies with the input -------

tree <- tibble::tribble(
  ~treeID, ~stemID, ~gx, ~gy, ~tag,   ~sp,  ~dbh, ~status, 
     "01",    "01",   5,   5, "01", "sp1",     5,     "A",
     "02",    "01",   5,   5, "02", "sp1",     5,     "A",
     "03",    "01",   5,   5, "03", "sp2",     5,     "A",
     "04",    "01",   5,   5, "04", "sp2",     5,     "A"
)

# ungrouped `.data`, `.subset = NULL`, 
count_neighbor(tree, .subset = NULL, r = 20, plotdim = c(320, 500))

# grouped `.data`, `.subset = NULL`
by_sp <- dplyr::group_by(tree, sp)
count_neighbor(by_sp, .subset = NULL, r = 20, plotdim = c(320, 500))

subset <- tibble::tribble(
  ~gx, ~gy, ~tag,   ~sp, 
  3,   3, "99", "sp1"
)

# ungrouped `.data`, `.subset` not `NULL`
count_neighbor(tree, .subset = subset, r = 20, plotdim = c(320, 500))

# grouped `.data`, `.subset` not `NULL`
by_sp <- dplyr::group_by(tree, sp)
count_neighbor(by_sp, .subset = subset, r = 20, plotdim = c(320, 500))
}
