% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/neighbor.R
\name{neighbor}
\alias{neighbor}
\alias{abundance_neighbor}
\alias{count_neighbor}
\alias{basal_area_neighbor}
\title{Count and basal area of neighboring stems.}
\usage{
count_neighbor(.data, .subset = NULL, r, plotdim = NULL)

basal_area_neighbor(.data, .subset = NULL, r, plotdim = NULL)
}
\arguments{
\item{.data}{A Dataframe; particularly  a ForestGEO census table (tree or
stem).}

\item{.subset}{An optional dataframe giving the (\code{gx}, \code{gy}) coordinates of
specific individuals (\code{tag} and \code{sp}) for which to count neighbors. For
example, \code{.subset} may be a subset of only one species; or seedling that
are not part of census \code{.data}. \code{.subset} must have columns \code{gx}, \code{gy},
\code{sp}, and \code{tag}.}

\item{r}{Radius.}

\item{plotdim}{The x and y dimensions of the plot.}
}
\value{
A dataframe.
}
\description{
Includes all values of \code{status} and \code{dbh}. You should pick the values you
want before using these functions (e.g. to drop dead stems).
}
\examples{
tree <- fgeo.data::luquillo_tree5_random
# Guess `plotdim`
count_neighbor(tree, r = 20)

count_neighbor(tree, r = 20, plotdim = c(320, 500))

basal_area_neighbor(tree, r = 20, plotdim = c(320, 500))

by_quad <- dplyr::group_by(tree, quadrat)
suppressMessages(count_neighbor(by_quad, r = 20))

# Grouping by each tree; expect `heterospecific = 0`
by_treeid <- dplyr::group_by(tree, treeID)
suppressMessages(
  basal_area_neighbor(by_treeid, r = 20, plotdim = c(320, 500))
)
}
