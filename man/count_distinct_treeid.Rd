% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_distinct.R
\name{count_distinct_treeid}
\alias{count_distinct_treeid}
\alias{count_distinct_stemid}
\title{Count distinct values of treeid, stemid (optionally by groups).}
\usage{
count_distinct_treeid(.data)

count_distinct_stemid(.data)
}
\arguments{
\item{.data}{A ForestGEO-like dataframe, commonly grouped with \code{group_by()}.}
}
\value{
An object of the same class as .data. One grouping level will be
dropped (because of \code{dplyr::summarize()}).
}
\description{
These functions are simpler, specialized versions of \code{count_distinct()},
specifically for counting distinct occurrences of the variables \code{stemID} and
\code{treeID} (or \code{TreeID} and \code{StemID}) which uniquely identify each stem and
tree in ForestGEO-like datasets. They work with data grouped with
\code{dplyr::group_by()}.

\code{count_unique_treeid()} throws an error if each data-group contains more
than one value of treeid (i.e. if it contains multiple stems). You should
first collapse treeid by picking a single stem per treeid per group. Both
\code{count_unique_treeid()} and \code{count_unique_stemid()} warn if the dataset
contains multiple censusid.

Opinions vary on what \emph{abundance} means. For example, to calculate the
abundance of woods with ForestGEO data, you may need to define the \code{status}
and \code{dbh} range of the stems you are interested. But that's not the job of
this functions. These functions only count distinct occurrences of variables.
}
\section{Warning}{

These functions do not remove dead stems or trees. If you don't want dead
trees to be included, remove them first (see \code{\link[=drop_dead_tree]{drop_dead_tree()}},
\code{\link[=drop_dead_stem]{drop_dead_stem()}}.
}

\examples{
library(dplyr)
library(fgeo.tool)

census <- tibble::tibble(
  treeID = c(1, 1, 2, 3, 3, 3),
  stemID = c(1, 2, 3, 4, 5, 6),
  quadrat = paste0("000", rep(1:2, each = 3)),
  sp = c(paste0("sp", c(1, 1, 2)), paste0("sp", c(3, 3, 3))),
  dbh = abs(sample(rnorm(100), 6) * 10),
  hom = rep(130, 6)
)
census

count_distinct_stemid(census)

# To count distinct treeIDs you first need to pick one stem per tree
\dontrun{
# Error
count_distinct_treeid(census)
}
largest_stem <- pick_largest_hom_dbh(census)
largest_stem
count_distinct_treeid(largest_stem)

by_quad <- group_by(largest_stem, quadrat)
count_distinct_treeid(by_quad)

# You can count within groups by multiple variables
by_quad_sp <- group_by(largest_stem, quadrat, sp)
count_distinct_treeid(by_quad_sp)
}
\seealso{
Other functions for fgeo census and vft.: \code{\link{count_woods}}
}
\concept{functions for fgeo census and vft.}
