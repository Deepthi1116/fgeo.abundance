% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/by_group.R
\name{by_group}
\alias{by_group}
\title{Make any function work with grouped data.}
\usage{
by_group(.x, .f, ...)
}
\arguments{
\item{.x}{A dataframe.}

\item{.f}{A function.}

\item{...}{Addditional arguments passed to \code{.f}.}
}
\value{
The value of \code{.f} applied to groups with this caveats:
\itemize{
\item Following the approach split/apply/combine, \code{.f} does not compute on the
grouping variables.
}
}
\description{
Make any function work with grouped data.
}
\examples{
dfm <- tibble::tribble(
  ~x, ~y,  ~z,
  11, 21,  31,
  12, 22,  32,
  13, 23,  33
)

# Say you want to make this funciton work with grouped data
first_row <- function(.x, to_chr = FALSE) {
  first <- .x[1, ]
  if (to_chr) {
    first[] <- lapply(first, as.character)
  }
  
  tibble::as.tibble(first)
}

library(dplyr)

# Ungrouped
dfm \%>\% first_row()
# Same -- it does nothing with ungrouped data
dfm \%>\% by_group(first_row)

# Grouped
dfm \%>\% group_by(x) \%>\% by_group(first_row)

# Computes on any non-groping variable and returns the original groups
dfm \%>\% group_by(x) \%>\% by_group(first_row, to_chr = TRUE)
}
